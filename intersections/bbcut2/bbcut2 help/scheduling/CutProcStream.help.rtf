{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutProcStream
\f1\b0 \
\
Stream wrapper for a cut procedure, for use with Patterns or in your own custom code. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 \ul \ulc0 Class Methods
\f1\b0 \ulnone \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 *new(proc)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 proc
\f1\b0  - A cut procedure derived from BBCutProc\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
s=\cf3 Server\cf0 .default;
\f1\fs24 \

\f0\fs18 \
a= \cf3 CutProcStream\cf0 (\cf3 BBCutProc11\cf0 .new);\
\
\cf2 //no offsets set (usually this would be decided by cut synthesisers\cf0 \
10.do \{a.next(\cf3 Event\cf0 .default).postln\};\
\
a= \cf3 CutProcStream\cf0 (\cf3 RecursiveCutProc1\cf0 .new);\
\
\cf2 //offsets set\cf0 \
10.do \{a.next(\cf3 Event\cf0 .default).postln \};\
\
\cf2 //use with Patterns- not good for live interaction and beat induction in this case, but fine for rendering at server latency arms length.\cf0 \
\
t=TempoClock(2.4);\
\
\cf3 Pbindf\cf0 (\cf3 CutProcStream\cf0 (\cf3 WarpCutProc1\cf0 .new),\cf4 \\sustain\cf0 ,0.01,\cf4 \\freq\cf0 ,\cf3 Pfunc\cf0 (\{\cf3 arg\cf0  event; (event[\cf4 \\cutnum\cf0 ]*50) + 200\})).play(t);\
\
\
\cf3 Pbindf\cf0 (\cf3 CutProcStream\cf0 (\cf3 SQPusher1\cf0 .new),\cf4 \\sustain\cf0 ,0.01,\cf4 \\freq\cf0 ,\cf3 Pfunc\cf0 (\{\cf3 arg\cf0  event; (event[\cf4 \\cutnum\cf0 ]*260) + 170\}), \\amp, 0.2).play(t);\
\
\
\
\
}