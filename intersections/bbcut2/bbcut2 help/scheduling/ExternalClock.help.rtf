{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 ExternalClock
\f1\b0 \
\
Wrapper for a TempoClock that deals with the special scheduling queue required for externally driven scheduling. Subclasses of ExternalClock may deal with the case of a ServerClock (server side clock, as for instance from beat tracking UGens), or control from external applications. \
\
Because of Server latency, perceptual attack time of events and timing groove deviations, the next beat's worth of music must be generated before that beat, and cannot be rescheduled with changes of tempo. You add instances (individual bbcutters, patterns etc) to the clock.  \
\
Note that the scheduler compensates for latency- it is built for real-time reactions, so the latency is taken into account to avoid network jitter in communicating with the Server, but there is no delay from the required time of an event. Also, perceptual attack time and time deviations (possibly due to groove/expressive timing) of events are factored in. PAT necessitates pre-scheduling, expressive timing can go either way. \
\
warnings of undefined behaviour:\
Tempo is assumed in a moderate range 1-4 bps say. \
s.latency must be small, ie 0.05 sec. \
\
Using with Patterns- you can play EventStreams only. See EventStreamPlayer2 class file. \
\
Using as a general scheduler: this scheduler assumes that everything it schedules is an Event that has a \\play field, within which is a Function. For default Events this will be the same result as Event.play. For your own special Events you require at least (play:\{"something".postln;\})  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 \ul \ulc0 Class Methods
\f1\b0 \ulnone \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 *new(tempoclock)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 tempoclock
\f1\b0  - A TempoClock object. If a SimpleNumber gets passed in, a new TempoClock is created at that bps. The default is to use TempoClock.default;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\
s=\cf3 Server\cf0 .default;
\f1\fs24 \

\f0\fs18 \
s.latency=0.05;\
\
c=\cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1)).play;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //playExt= play on External Clock\cf0 \
p=\cf3 Pbind\cf0 .new.playExt(c); \
\
q= \cf3 Pbind\cf0 (\cf4 \\dur\cf0 ,\cf3 Pseq\cf0 ([0.25,0.25,0.5],\cf3 inf\cf0 ),\cf4 \\freq\cf0 ,\cf3 Pseq\cf0 ([330,330,550],\cf3 inf\cf0 ),\cf4 \\sustain\cf0 , 0.1).playExt(c);\
\
q.mute;\
q.unmute;\
\
p.stop;\
q.stop;\
\
~buffers= \cf3 BBCutBuffer\cf0 .array([\cf5 "sounds/break"\cf0 ,\cf5 "sounds/break2"\cf0 ],[8,4]);\
	\
\cf2 //will be added to run on this clock as soon as made	\cf0 \
a=\cf3 BBCut2\cf0 (\cf3 CutBuf2\cf0 (~buffers[0],0.3), \cf3 BBCutProc11\cf0 .new).play(c);\
\
b=\cf3 BBCut2\cf0 (\cf3 CutBuf2\cf0 (~buffers[1],0.5,dutycycle:0.4), \cf3 BBCutProc11\cf0 .new).play(c);\
\
\cf2 //stream cut audio in\cf0 \
g=\cf3 BBCut2\cf0 (\cf3 CutStream1\cf0 (8), \cf3 ChooseCutProc\cf0 (0.5,4)).play(c);\
\
\
\cf2 //remove the first from the clock- don't worry if there are FAILURE messages, some latency queued OSC messages\cf0 \
\cf2 //are still waiting that were already sent to the server, they shouldn't cause too much trouble\cf0 \
a.end\
\
c.tempoclock.tempo_(1.5);\
\
b.end\
\
\cf2 //remove everything and terminate TempoClock\cf0 \
c.stop;}