{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutTrig1
\f1\b0 \
\
This cut synth will trigger a particular sample at each block. There is a user defined probability of whether to play the sample on every cut as a roll, or just once at the beginning of the block. The complete sample is played back, though tempered by the dutycycle parameter and repitched by the pbsfunc. \
\
All the samples must be either mono, or all must be stereo. For stereo you must explicitly set the CutGroup to have 2 channels. \
\

\f2\b \ul Class Methods
\f1\b0 \ulnone \
\

\f2\b *new(bufarray, buffunc, rollprob, pbsfunc, dutycycle)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 bufarray
\f1\b0  - Array of BBCutBuffer instances. \
    \

\f2\b buffunc
\f1\b0 - Something responding to .value (usually a Function) which determines which buffer in the array above is selected. \
\

\f2\b rollprob
\f1\b0 - Probability of playing every cut compared to playing just the first of a block. You can pass in a float, in which case the probability is the same for every sample in the bufarray, else pass in an array of the same size as the bufarray. \
\

\f2\b pbsfunc
\f1\b0 - Playback speed (rate) control for triggered samples. \
\

\f2\b dutycycle
\f1\b0 - Ratio of duration to inter-onset-interval (IOI). 0.5 would mean that the duration of grains is only half the length between cut start times. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\cf2 //you need three samples, labelled kick.wav, snare.wav and hat.wav to try these examples\cf0 \
\
s=\cf3 Server\cf0 .default;\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  bufs, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
			\
bufs=\cf3 BBCutBuffer\cf0 .array([\cf4 "sounds/kick.wav"\cf0 ,\cf4 "sounds/snare.wav"\cf0 ,\cf4 "sounds/hat.wav"\cf0 ]);\
\
s.sync; \
\
\cf3 BBCut2\cf0 (\cf3 CutTrig1\cf0 (bufs, \{3.rand\},[0.0,0.2,1.0],1.0,1.0), \cf3 WarpCutProc1\cf0 .new).play(clock);\
\});\
\
)\
\
\
\
(\
\cf3 var\cf0  bufs, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
			\
bufs=\cf3 BBCutBuffer\cf0 .array([\cf4 "sounds/kick.wav"\cf0 ,\cf4 "sounds/snare.wav"\cf0 ,\cf4 "sounds/hat.wav"\cf0 ]);\
\
s.sync; \
\
\cf3 BBCut2\cf0 (\cf3 CutTrig1\cf0 (\
bufs,								     \cf2 //source buffer array\cf0 \
\{\cf3 arg\cf0  block; [0,1,2].wrapAt(block.blocknum)\}, 	\cf2 //buffer selection\cf0 \
[0.5,0.7,0.2],							\cf2 //roll probs\cf0 \
\{[1.0,0.5,2].wchoose([0.8,0.1,0.1])\}, 		\cf2 //pbsfunc\cf0 \
\{[1.0,0.5,0.25].wchoose([0.9,0.07,0.03])\}		\cf2 //dutycycle\cf0 \
), \cf3 ChooseCutProc\cf0 (\{[0.25,0.125].wchoose([0.8,0.2])\},4)).play(clock);\
\});\
\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //faster algorithmic 4/4 beat\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  bufs, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (3.4));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
			\
bufs=\cf3 BBCutBuffer\cf0 .array([\cf4 "sounds/kick.wav"\cf0 ,\cf4 "sounds/snare.wav"\cf0 ,\cf4 "sounds/hat.wav"\cf0 ]);\
\
s.sync; \
\
\cf3 BBCut2\cf0 (\cf3 CutTrig1\cf0 (\
bufs,								     \cf2 //source buffer array\cf0 \
\{\cf3 arg\cf0  block; [0,2,1,2].wrapAt(block.blocknum)\}, 	\cf2 //buffer selection\cf0 \
[0.3,0.7,0.5],							\cf2 //roll probs\cf0 \
\{[1.0,0.96,1.02].wchoose([0.8,0.1,0.1]);\}, 		\cf2 //pbsfunc\cf0 \
\{[1.0,0.5,0.25].wchoose([0.6,0.3,0.1]);\}		\cf2 //dutycycle\cf0 \
), \cf3 ChooseCutProc\cf0 (0.25,4)).play(clock);\
\});\
\
)\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //timing test\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  bufs, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (1.4));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
			\
bufs=\cf3 BBCutBuffer\cf0 .array([\cf4 "sounds/kick.wav"\cf0 ,\cf4 "sounds/snare.wav"\cf0 ,\cf4 "sounds/hat.wav"\cf0 ]);\
\
s.sync; \
\
\cf3 BBCut2\cf0 (\cf3 CutTrig1\cf0 (\
bufs,								     \cf2 //source buffer array\cf0 \
\{\cf3 arg\cf0  block; [0,2].wrapAt(block.blocknum)\}, 	\cf2 //buffer selection\cf0 \
[1.0,1.0,1.0],							\cf2 //roll probs\cf0 \
1.0, 		\cf2 //pbsfunc\cf0 \
1.0		\cf2 //dutycycle\cf0 \
), \cf3 ChooseCutProc\cf0 (0.25,4)).play(clock);\
\});\
\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //stereo sample test (you need to supply stereo samples here to try this)\cf0 \
(\cf5 \
\cf6 var\cf5  bufs, clock;\
\
clock= \cf6 ExternalClock\cf5 (\cf6 TempoClock\cf5 (2.4));	\
		\
clock.play;		\
		\
\cf6 Routine\cf5 .run(\{\
			\
bufs=\cf6 BBCutBuffer\cf5 .array([\cf7 "sounds/stereokick.wav"\cf5 ,\cf7 "sounds/stereosnare.wav"\cf5 ]);\
\
s.sync; \
\
\cf6 BBCut2\cf5 (\cf6 CutGroup\cf5 (\cf6 CutTrig1\cf5 (\
bufs,								     \cf8 //source buffer array\cf5 \
\{\cf6 arg\cf5  block; [0,1].wrapAt(block.blocknum)\}, 	\cf8 //buffer selection\cf5 \
[1.0,1.0],							\cf8 //roll probs\cf5 \
1.0, 		\cf8 //pbsfunc\cf5 \
1.0		\cf8 //dutycycle\cf5 \
),\
numChannels:2)\
, \cf6 ChooseCutProc\cf5 (\{[0.5,0.25].choose\},2)).play(clock);\
\});\
\
\cf0 )\
\
\
\
\
\
\
\
}