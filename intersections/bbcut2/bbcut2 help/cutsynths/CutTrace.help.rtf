{\rtf1\mac\ansicpg10000\cocoartf824
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutTrace
\f1\b0 \
\
A class to trace the state of cutsynths as they render algorithmically determined cuts. The base behaviour is to post the cut data.  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 \ul \ulc0 Class Methods
\f1\b0 \ulnone \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 *new(instance, compensate, data)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 instance
\f1\b0  - instance number for this tracer\
\

\f2\b compensate
\f1\b0 - Seconds of compensation, pass in s.latency to have the function render at the same time as the cut starts synthesising, else leave 0.0.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b\fs24 \cf0 data
\f1\b0 - Data specific to subclasses, see CutOSC\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\
\
(\
\cf3 var\cf0  sf, clock, synth;\
\
s=\cf3 Server\cf0 .default;
\f1\fs24 \

\f0\fs18 \
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1)).play;	\
		\
\cf3 Routine\cf0 .run(\{\
\
sf= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break2"\cf0 ,4);\
\
s.sync;\
\
\cf3 BBCut2\cf0 (\cf3 CutBuf1\cf0 (sf).trace_(\cf3 CutTrace\cf0 (1)), \cf3 WarpCutProc1\cf0 .new).play(clock);\
\
\});\
\
)\
\
\
\
\
\
\cf2 //showing all subevents generated by a CutBuf3\cf0 \
(\
\cf3 var\cf0  sf, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.8));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
\
//given event positions			\
sf= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break2"\cf0 ,4, [ 0, 16789, 28721, 37166, 41389, 49042, 56783 ]); \cf2 \
\cf0 \
s.sync; \cf2 //this forces a wait for the Buffer to load\cf0 \
\
//sf.setgroove; \cf2 //defaults to UK garage swing\cf0 \
\
\cf3 BBCut2\cf0 ([\cf3 CutBuf3\cf0 (sf,0.3,1.0,\cf3 false\cf0 ,\cf3 false\cf0 ,1.0,1.0,0.0,0.0,0).trace_(\cf3 CutTrace\cf0 (1))], \cf3 ChooseCutProc\cf0 (1.0,2)).play(clock);\
\});\
\
)\
\
\
}