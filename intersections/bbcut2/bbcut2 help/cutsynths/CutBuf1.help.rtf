{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutBuf1
\f1\b0 \
\
Playback for a buffer, using a single fixed PlayBuf UGen with jump in playback position- cheap for CPU but no enveloping, so it may click, and no individual parameters for different grains are supported.  \
\
\

\f2\b \ul Class Methods
\f1\b0 \ulnone \
\

\f2\b *new(bbcutbuf, offset)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 bbuctbuf
\f1\b0  - An instance of BBCutBuffer representing the buffer to be cut-up.\
    \

\f2\b offset
\f1\b0 - A parameter to be passed to any cut playback position determining routine. The default chooseoffset method is in BBCutBuffer and the parameter is a single number from 0.0 to 1.0 giving the chance of a jump to a random event in the source.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b\fs22 \cf0 \ul \ulc0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 (\
\cf3 var\cf0  sf, clock;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1));	\
		\
clock.play;		\
		\
\cf3 Routine\cf0 .run(\{\
			\
sf= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break"\cf0 ,8);\
\
s.sync; \cf2 //this forces a wait for the Buffer to load\cf0 \
\
\cf2 //0.3.coin chance of random offset starting position for cut playback\cf0 \
\cf3 BBCut2\cf0 (\cf3 CutBuf1\cf0 (sf,0.3), \cf3 BBCutProc11\cf0 .new).play(clock);\
\});\
\
)\
\
}