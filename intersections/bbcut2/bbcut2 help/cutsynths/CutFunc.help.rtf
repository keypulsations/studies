{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutFunc
\f1\b0 \
\
Cut renderer calling an arbitrary function. The function will be called at s.latency seconds before the cut is timed to occur. This is probably imperceptible for small latencies, though you may wish to compensate. However, in order to send your own OSC messages etc this is a necessary restriction. \
\

\f2\b \ul Class Methods
\f1\b0 \ulnone \
\

\f2\b *new(cutfunc, blockfunc, phrasefunc, compensate)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 cutfunc
\f1\b0  - A function to be called for each cut, whichcut (an Integer), block (a BBCutBlock) and the clock (an ExternalClock) are passed in as the arguments. If left nil, it will not be called. \
    \

\f2\b blockfunc
\f1\b0  - A function to be called for each new block, block (a BBCutBlock) and the clock (an ExternalClock) are passed in as the arguments. If left nil, it will not be called. \
    \

\f2\b phrasefunc
\f1\b0  - A function to be called for each new phrase, block (a BBCutBlock) and the clock (an ExternalClock) are passed in as the arguments. If left nil, it will not be called. \
\

\f2\b compensate
\f1\b0 - Seconds of compensation, pass in s.latency to have the function render at the same time as the cut starts synthesising, else leave 0.0, especially if you are sending your own messages to the Server via the CutFunc\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf, clock, synth;\
\
s=\cf3 Server\cf0 .default;
\f1\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
synth=\cf3 SynthDef\cf0 (\cf4 \\mysound\cf0 , \{\cf3 arg\cf0  freq=440, modulo=0.4; \cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(\cf3 Resonz\cf0 .ar(\cf3 LFSaw\cf0 .ar(freq),500,0.1)%modulo, 0.0));\}).play;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1)).play;	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 BBCut2\cf0 (\cf3 CutFunc\cf0 (\{\cf3 arg\cf0  i, block, clock; "I was called".postln; synth.set(\cf4 \\freq\cf0 ,55+(i*110),\cf4 \\modulo\cf0 ,0.5-((i*0.025).min(0.475)))\}), \cf3 WarpCutProc1\cf0 .new).play(clock);\
\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //check against timing of normal cutter\cf0 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf, clock, synth;\
\
s=\cf3 Server\cf0 .default;
\f1\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
synth=\cf3 SynthDef\cf0 (\cf4 \\mysound\cf0 , \{\cf3 arg\cf0  freq=440, modulo=0.4; \cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(\cf3 Resonz\cf0 .ar(\cf3 LFSaw\cf0 .ar(freq),500,0.1)%modulo, 0.0));\}).play;\
\
clock= \cf3 ExternalClock\cf0 (\cf3 TempoClock\cf0 (2.1)).play;	\
		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Routine\cf0 .run(\{\
\
sf= \cf3 BBCutBuffer\cf0 (\cf5 "sounds/break2"\cf0 ,4);\
\
s.sync;\
\
\cf3 BBCut2\cf0 ([\cf3 CutFunc\cf0 (\{\cf3 arg\cf0  i, block, clock; \cf5 "cut"\cf0 .postln; synth.set(\cf4 \\freq\cf0 ,55+(i*110),\cf4 \\modulo\cf0 ,0.5-((i*0.025).min(0.475)))\}),\cf3 CutBuf1\cf0 (sf)], \cf3 WarpCutProc1\cf0 .new).play(clock);\
\});\
\
)\
\
}