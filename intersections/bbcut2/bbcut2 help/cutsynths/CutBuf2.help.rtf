{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 CutBuf2
\f1\b0 \
\
Playback for a buffer, with individual grains spawned for each cut. Each grain may have associated parameters for playback speed, enveloping and dutycycle (ratio of duration to inter-onset-interval).  \
\
\

\f2\b \ul Class Methods
\f1\b0 \ulnone \
\

\f2\b *new(bbcutbuf, offset, pbsfunc, dutycycle, atkprop, relprop, curve)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 bbuctbuf
\f1\b0  - An instance of BBCutBuffer representing the buffer to be cut-up.\
    \

\f2\b offset
\f1\b0 - A parameter to be passed to any cut playback position determining routine. The default chooseoffset method is in BBCutBuffer and the parameter is a single number from 0.0 to 1.0 giving the chance of a jump to a random event in the source.\
\

\f2\b pbsfunc
\f1\b0 - Playback speed (rate) control for grains. \
\

\f2\b dutycycle
\f1\b0 - Ratio of duration to inter-onset-interval (IOI). 0.5 would mean that the duration of grains is only half the length between cut start times. \
\

\f2\b atkprop
\f1\b0 - Enveloping parameter for attack speed. Rated as a proportion of the overall envelope (0.0 to 1.0) \
\

\f2\b relprop
\f1\b0 - Enveloping parameter for release speed. Rated as a proportion of the overall envelope (0.0 to 1.0) \
\

\f2\b curve
\f1\b0 - Envelope curve\
\
All of the arguments apart from bbcutbuf can have more complex objects than SimpleNumbers passed in. You can pass in anything which responds to value (like a Function) or even objects which respond to the updateblock method such as CutPBS1 (see examples below). \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\cf3 (\
\cf4 var\cf3  sf, clock;\
\
s=\cf4 Server\cf3 .default;
\f1\fs24 \

\f0\fs18 \
clock= \cf4 ExternalClock\cf3 (\cf4 TempoClock\cf3 (2.1)).play;	\
		\
\cf4 Routine\cf3 .run(\{\
			\
sf= \cf4 BBCutBuffer\cf3 (\cf5 "sounds/break"\cf3 ,8);\
\
s.sync; \cf6 //this forces a wait for the Buffer to load\cf3 \
\
\cf4 BBCut2\cf3 (\cf4 CutBuf2\cf3 (sf,0.3), \cf4 BBCutProc11\cf3 .new).play(clock);\
\});\
\
)\
\
\
\cf6 //dutycycle and envelope manipulations, CutPBS1 instance used to control repitching of rolls\cf3 \
(\
\cf4 var\cf3  sf, clock;\
\
clock= \cf4 ExternalClock\cf3 (\cf4 TempoClock\cf3 (2.1)).play;	\
		\
\cf4 Routine\cf3 .run(\{\
			\
sf= \cf4 BBCutBuffer\cf3 (\cf5 "sounds/break"\cf3 ,8);\
\
s.sync; \cf6 //this forces a wait for the Buffer to load\cf3 \
\
\cf4 BBCut2\cf3 (\cf4 CutBuf2\cf3 (sf,0.3, \cf4 CutPBS1\cf3 (0.97,\{1.rand2\}), 0.5, 0.001, 0.5, -4), \cf4 WarpCutProc1\cf3 .new).play(clock);\
\});\
\
)\
\
\
\cf6 //showing passing of functions, the block argument passed to the dutycycle function is a BBCutBlock object\cf3 \
(\
\cf4 var\cf3  sf, clock;\
\
clock=\cf4 ExternalClock\cf3 (\cf4 TempoClock\cf3 (3.3)).play;	\
		\
\cf4 Routine\cf3 .run(\{\
			\
sf= \cf4 BBCutBuffer\cf3 (\cf5 "sounds/break2"\cf3 ,4);\
\
s.sync; \cf6 //this forces a wait for the Buffer to load\cf3 \
\
\cf4 BBCut2\cf3 (\cf4 CutBuf2\cf3 (sf,0.3, \{rrand(0.9,1.1)\}, \{\cf4 arg\cf3  i, block; \cf4 var\cf3  ioi; ioi= block.iois[i]; ioi.min(0.75)/ioi\},\{exprand(0.001,0.5)\}), \cf4 ChooseCutProc\cf3 (\{[0.5,1.0,1.25].choose\},\{rrand(1,4)\})).play(clock);\
\});\
\
)\
\
\
(\
\cf4 var\cf3  sf, clock;\
\
clock=\cf4 ExternalClock\cf3 (\cf4 TempoClock\cf3 (3.3)).play;	\
		\
\cf4 Routine\cf3 .run(\{\
			\
sf= \cf4 BBCutBuffer\cf3 (\cf5 "sounds/break2"\cf3 ,4);\
\
s.sync; \cf6 //this forces a wait for the Buffer to load\cf3 \
\
\cf4 BBCut2\cf3 (\cf4 CutBuf2\cf3 (sf, relprop:0.8, curve:\{rrand(-16,-1)\}), \cf4 ChooseCutProc\cf3 (\{[0.5,1.0,0.25].choose\},\{rrand(1,4)\})).play(clock);\
\});\
\
)\
\cf0 \
\
}