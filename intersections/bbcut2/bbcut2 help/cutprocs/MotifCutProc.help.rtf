{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red191\green0\blue0;
\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b\fs36 \cf0 MotifCutProc\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 Superclass: BBCutProc\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
This cut procedure provides an intermediate level of hierachy between a phrase and a block. A motif is \
a short rhythmic cell, represented by nested arrays. A block is taken an array of cuts, for example:\
\
[ 1.0, 1.0, 1.0 ]\
\
being three repeats of 1.0 beats. A motif is an array of blocks:\
\
[ [ 1.0, 1.0, 1.0 ], [ 2.0, 1.5 ] ]\
\
This Motif then lasts 6.5 beats in total. \
The MotifCutProc is passed an array of Motifs, so a twice nested array. An indexing function is also passed\
as the second argument, for selecting the next Motif. If the Motifs don't fit within a phrase, the last rhythmic \
value is shortened to fit. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 \ul \ulc0 Class Methods\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 *new(motiflist, indexfunc, phraselength, bpsd)  
\f1\b0  \
Create a MotifCutProc object with the given parameters.\
\

\f2\b *stringtomotif(string)
\f1\b0  Converts a string in a particular form into a Motif. Used for \
entering Motifs in a StringDialog in live coding. The class method returns a Motif.\
The form uses integers and the the letter 'r' for repeats, and ignores all else. For example\
\
3r4 = [ 3, 3, 3,3 ] 		2r24r1 = [ [ 2, 2 ],  [ 1, 1, 1, 1 ] ]\
\
It would then be converted into beats, by a multiplier like 0.5, 0.25. \
\
This method is unnecessary since you can go "[1.5]".interpret...\
\
\

\f2\b \ul Instance Methods\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b \cf0 initBBCutProc11(ml, if)
\f1\b0  Called internally after a new.\
\
Examples-\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
(\cf3 \
\cf4 //you must have run this code before any of the examples below\cf3 \
f= \cf5 BBCutBuffer\cf3 (\cf6 "sounds/break"\cf3 ,8); \
\
\cf5 TempoClock\cf3 .default.tempo_(2.4);\
\cf0 )\
\
(	\cf2 //default index function (free random choice)\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf7 BBCut2\cf0 (\cf7 CutBuf2\cf0 (f),\cf7 MotifCutProc\cf0 .new(\
[			\cf2 //array of Motifs\cf0 \
[[1.0,1.0,1.0], [0.25, 0.25, 0.5]],	\cf2 //first Motif	\cf0 \
[[0.5, 0.5], [0.33, 0.33, 0.34]]	\cf2 //second Motif\cf0 \
]\
)).play;\
\
)\
\
\
(	\cf2 //changing the motiflist gradually as you go\cf0 \
\cf7 var\cf0  motiflist;\
\
motiflist=[[[0.5,0.5],[0.25,0.25],[0.5]]]; \
\
\cf7 BBCut2\cf0 (\cf7 CutBuf2\cf0 (f),\cf7 MotifCutProc\cf0 .new(\
motiflist, 0,\
\{		\cf2 //phraselength function called once a phrase, change motiflist then\cf0 \
	\
	motiflist.do(\{	\
		\cf7 arg\cf0  motif,i; \
		\
		motif.do(\{	\
			\cf7 arg\cf0  block,j;\
			\
			block.do(\{\cf7 arg\cf0  cutsize,k; \
				\
				cutsize= if(cutsize>0.125, \
				\{cutsize*([0.5,1,2].wchoose([0.25, 0.5, 0.25]))\},\
				\{cutsize*(2**(3.rand));\});\
				\
				motiflist.at(i).at(j).put(k, cutsize);\
			\});\
		\});\
		\
	\});\
	\
	8.0\
\}\
)).play;\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //live coding changing of motifs\cf0 \
\
(	\
m=[[[0.5,0.5],[0.25,0.25],[0.5]]]; \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf7 BBCut2\cf0 (\cf7 CutBuf2\cf0 (f),\cf7 MotifCutProc\cf0 .new(m, \{m.size.rand\},8.0)).play;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //changing the motiflist as you go\cf0 \
m.put(0,[[0.25,0.25],[1.0],[0.5]]);\
\
m.add([[1.0,0.5],[0.5,1.0]]);\
\
m.add([[0.33,0.33,0.34,0.34,0.33,0.11,0.11,0.11]]);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
////////////\
For additional data on the algorithm and its use under interactive evolution see\
Nick Collins, "Interactive Evolution of Breakbeat Cut Sequences",\
Proceedings of Cybersonica 2002 \
reproduced at http://www.cus.cam.ac.uk/~nc272/\
////////////\
\
\
}