{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\cf0 \
\cf2 \
\
//bbcut2 examples by Fredrik Olofsson\cf0 \
\
\cf2 //jazzwaltz example (changes after a number of bars...)
\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 s.boot;\
s.latency= 0.05;\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf;\
\
\cf3 Routine\cf0 .run(\{\
			\
sf= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break"\cf0 , 8);\
\
s.sync; \cf2 //this forces a wait for the Buffer to load\cf0 \
\
\cf3 BBCut2\cf0 (\cf3 CutBuf2\cf0 (sf, 0), \cf3 ChooseBlockProc\cf0 (16, \{[8, 12, 16, 32].wchoose([0.3, 0.1, 0.3, 0.3])\}), \cf3 BBCutQuantise1\cf0 (0.33)).play(1.6);\
\});\
\
)\
\
\
\cf2 //live coding style\cf0 \
\
f= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break"\cf0 , 8);\
\
(	\cf2 //init settings\cf0 \
~plength= 1;\
~subfunc= \{[8, 16].choose\};\
~permfunc= \{\cf3 |i|\cf0  i%7%3\};\
~stutfunc= \{\cf3 |i|\cf0  i%8\};\
)\
\
a= \cf3 BBCut2\cf0 (\cf3 CutBuf2\cf0 (f), \cf3 BBCPPermute\cf0 (~plength, \{~subfunc.value\}, \{\cf3 |i, n|\cf0  ~permfunc.value(i, n)\}, \{\cf3 |i|\cf0  ~stutfunc.value(i)\})).play(2.3)\
\
(\
~cnt= 0;\
~subfunc= \{~cnt= ~cnt+1; [4, 8][(~cnt%8).div(7)]\};\
~permfunc= \{\cf3 |i|\cf0  i%7%5\};\
~stutfunc= \{\cf3 |i|\cf0  i%5\};\
)\
\
(\
~plength= 4;\
~subfunc= \{1.rrand(8)\};\
~permfunc= \{\cf3 |i, n|\cf0  (8%n/(i+1)).asInteger\};\
~stutfunc= \{\cf3 |i|\cf0  i|4\};\
)\
\
(\
~plength= 1;\
~subfunc= 20;\
~permfunc= \{\cf3 |i, n|\cf0  [n-i, n][i.div(6)%2]\};\
~stutfunc= \{\cf3 |i|\cf0  [i, 0].wchoose([0.97, 0.03])\};\
)\
\
(\
\cf2 //wait for it to grow\cf0 \
~cnt= 0;\
~plength= 8;\
~subfunc= 4;\
~permfunc= \{\cf3 |i, n|\cf0  i\};\
~stutfunc= \{\cf3 |i|\cf0  ~cnt= ~cnt+1; ~cnt+i%(~cnt.div(64)+2)\};\
)\
\
a.end\
\
\
\
\
f= \cf3 BBCutBuffer\cf0 (\cf4 "sounds/break"\cf0 , 8);\
\
(	\cf2 //init settings\cf0 \
~blockfunc= 1;\
~cutfunc= 24;\
~bpsd= \{\cf3 |i|\cf0  i%8/4\};\
)\
\
a= \cf3 BBCut2\cf0 (\cf3 CutBuf2\cf0 (f), \cf3 ChooseBlockProc\cf0 (\{\cf3 |left, len|\cf0  ~blockfunc.value(left, len)\}, \{\cf3 |len|\cf0  ~cutfunc.value(len)\}, \{\cf3 |i|\cf0  ~bpsd.value(i)\})).play(2.4);\
\
(\
~blockfunc= 4;\
)\
\
(\
~cutfunc= \{2.rrand(12)\};\
~bpsd= \{\cf3 |i|\cf0  i%4/4\};\
)\
\
(\
~blockfunc= \{[2, 3].wchoose([0.9, 0.1])\};\
~cutfunc= \{\cf3 |len|\cf0  1+len\};\
~bpsd= \{\cf3 |i|\cf0  [3, 1, 3, 1, 3, 1, 4].wrapAt(i)\};\
)\
\
(	\cf2 //practice the drums\cf0 \
~cnt= 1;\
~blockfunc= 1;\
~cutfunc= \{~cnt\};\
~bpsd= \{\cf3 |i|\cf0  ~cnt= i%8+1; ~cnt.div(2)+1\}\
)\
\
(\
~blockfunc= \{[2, 4, 8][~cnt%3]\};\
~bpsd= \{\cf3 |i|\cf0  ~cnt= ~cnt+i%8+1; 4.div(~cnt)+1\}\
)\
\
a.end\
\
}